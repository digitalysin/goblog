// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package request

import (
	"time"

	mock "github.com/stretchr/testify/mock"
)

// NewMockWebClientFactory creates a new instance of MockWebClientFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockWebClientFactory(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockWebClientFactory {
	mock := &MockWebClientFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockWebClientFactory is an autogenerated mock type for the WebClientFactory type
type MockWebClientFactory struct {
	mock.Mock
}

type MockWebClientFactory_Expecter struct {
	mock *mock.Mock
}

func (_m *MockWebClientFactory) EXPECT() *MockWebClientFactory_Expecter {
	return &MockWebClientFactory_Expecter{mock: &_m.Mock}
}

// Create provides a mock function for the type MockWebClientFactory
func (_mock *MockWebClientFactory) Create(timeout time.Duration) Client {
	ret := _mock.Called(timeout)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 Client
	if returnFunc, ok := ret.Get(0).(func(time.Duration) Client); ok {
		r0 = returnFunc(timeout)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Client)
		}
	}
	return r0
}

// MockWebClientFactory_Create_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Create'
type MockWebClientFactory_Create_Call struct {
	*mock.Call
}

// Create is a helper method to define mock.On call
//   - timeout
func (_e *MockWebClientFactory_Expecter) Create(timeout interface{}) *MockWebClientFactory_Create_Call {
	return &MockWebClientFactory_Create_Call{Call: _e.mock.On("Create", timeout)}
}

func (_c *MockWebClientFactory_Create_Call) Run(run func(timeout time.Duration)) *MockWebClientFactory_Create_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(time.Duration))
	})
	return _c
}

func (_c *MockWebClientFactory_Create_Call) Return(client Client) *MockWebClientFactory_Create_Call {
	_c.Call.Return(client)
	return _c
}

func (_c *MockWebClientFactory_Create_Call) RunAndReturn(run func(timeout time.Duration) Client) *MockWebClientFactory_Create_Call {
	_c.Call.Return(run)
	return _c
}
